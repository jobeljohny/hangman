// <auto-generated />
using System;
using Hangman_Backend.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hangman_Backend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230804103332_movieFetcherAddition")]
    partial class movieFetcherAddition
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Hangman_Backend.Models.GameSession", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Movie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MovieName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Template")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("endTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("errorBuffer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("isNumber")
                        .HasColumnType("bit");

                    b.Property<bool>("isPlaying")
                        .HasColumnType("bit");

                    b.Property<int?>("lives")
                        .HasColumnType("int");

                    b.Property<int?>("round")
                        .HasColumnType("int");

                    b.Property<float?>("score")
                        .HasColumnType("real");

                    b.Property<DateTime?>("startTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Username");

                    b.ToTable("gameSessions", (string)null);
                });

            modelBuilder.Entity("Hangman_Backend.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("Hangman_Backend.Models.UserStatistics", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GamesPlayed")
                        .HasColumnType("int");

                    b.Property<int?>("HighestRound")
                        .HasColumnType("int");

                    b.Property<int?>("Highscore")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Username");

                    b.ToTable("statistics", (string)null);
                });

            modelBuilder.Entity("Hangman_Backend.Models.movieFetcher", b =>
                {
                    b.Property<string>("movie")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("movie");

                    b.ToTable("movies", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
